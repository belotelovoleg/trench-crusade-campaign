generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model games {
  id                                    Int          @id @default(autoincrement())
  warband_1_id                          Int
  warband_2_id                          Int
  status                                games_status @default(planned)
  vp_1                                  Int?         @default(0)
  vp_2                                  Int?         @default(0)
  gp_1                                  Int?         @default(0)
  gp_2                                  Int?         @default(0)
  idt                                   DateTime?    @default(now())
  udt                                   DateTime?    @default(now())
  warband_1_gameNumber                  Int?
  warband_2_gameNumber                  Int?
  warband_1_roster_id                   Int?
  warband_2_roster_id                   Int?
  player1_isReady                       Boolean      @default(false)
  player2_isReady                       Boolean      @default(false)
  player1_id                            Int?
  player2_id                            Int?
  player1_isApprovedResult              Boolean      @default(false)
  player2_isApprovedResult              Boolean      @default(false)
  player1_calledReinforcements          Boolean      @default(false)
  player2_calledReinforcements          Boolean      @default(false)
  player1_injuries                      Json?
  player2_injuries                      Json?
  player1_skillAdvancements             Json?
  player2_skillAdvancements             Json?
  player1_becomesElite                  Json?
  player2_becomesElite                  Json?
  player1_explorationDice               Int?
  player2_explorationDice               Int?
  warbands_games_warband_1_idTowarbands warbands     @relation("games_warband_1_idTowarbands", fields: [warband_1_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "games_ibfk_1")
  warbands_games_warband_2_idTowarbands warbands     @relation("games_warband_2_idTowarbands", fields: [warband_2_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "games_ibfk_2")

  @@index([warband_1_id], map: "warband_1_id")
  @@index([warband_2_id], map: "warband_2_id")
  @@index([player1_id], map: "idx_player1_id")
  @@index([player2_id], map: "idx_player2_id")
}

model players {
  id            Int        @id @default(autoincrement())
  login         String     @unique(map: "login")
  password_hash String
  name          String?
  email         String?    @unique(map: "email")
  avatar_url    String?
  avatar        String?
  notes         String?
  is_admin      Boolean?   @default(false)
  is_active     Boolean    @default(true)
  idt           DateTime?  @default(now())
  udt           DateTime?  @default(now())
  ldt           DateTime?
  warbands      warbands[]
}

model rosters {
  id           Int       @id @default(autoincrement())
  warband_id   Int
  file_url     String?
  file_content String?
  description  String?
  uploaded_at  DateTime? @default(now())
  ducats       Int?      @default(0)
  model_count  Int?      @default(0)
  glory_points Int?      @default(0)
  game_number  Int?
  warbands     warbands  @relation(fields: [warband_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "rosters_ibfk_1")

  @@index([warband_id], map: "rosters_warband_id")
}

model stories {
  id         Int       @id @default(autoincrement())
  warband_id Int
  game_id    Int?
  text       String?
  posted_at  DateTime? @default(now())
  warbands   warbands  @relation(fields: [warband_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "stories_ibfk_1")

  @@index([warband_id], map: "stories_warband_id")
}

model warbands {
  id                                 Int           @id @default(autoincrement())
  player_id                          Int
  name                               String?
  games_count                        Int?          @default(0)
  victory_points                     Int?          @default(0)
  idt                                DateTime?     @default(now())
  udt                                DateTime?     @default(now())
  catalogue_name                     String?
  status                             WarbandStatus @default(checking)
  games_games_warband_1_idTowarbands games[]       @relation("games_warband_1_idTowarbands")
  games_games_warband_2_idTowarbands games[]       @relation("games_warband_2_idTowarbands")
  rosters                            rosters[]
  stories                            stories[]
  players                            players       @relation(fields: [player_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "warbands_ibfk_1")

  @@index([player_id], map: "player_id")
}

model about_campaign {
  id        Int      @id @default(1)
  content   String?
  updatedAt DateTime @default(now()) @updatedAt
}

enum games_status {
  planned
  active
  pending_approval
  finished
  cancelled
}

enum WarbandStatus {
  active
  checking
  needs_update
  deleted
}
