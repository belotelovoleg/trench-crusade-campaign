'use client';
import { useRouter } from 'next/navigation';
import { Button, Typography, CircularProgress, Tooltip } from '@mui/material'; // —è–∫—â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—à MUI
import { useEffect, useState, useMemo } from 'react';
import Link from 'next/link';
import styles from './page.module.css';
import greetings from './greetings';

export const dynamic = "force-dynamic";

export default function Home() {
  const router = useRouter();
  const [about, setAbout] = useState<string>('');
  const [aboutLoading, setAboutLoading] = useState(true);
  const [user, setUser] = useState<any>(null);
  const [loading, setLoading] = useState(true);
  const [greeting, setGreeting] = useState<string>('');
  useEffect(() => {
    fetch('/api/about', {
      cache: 'no-cache',
      headers: {
        'Cache-Control': 'no-cache'
      }
    })
      .then(res => res.json())
      .then(data => setAbout(data.content || ''))
      .finally(() => setAboutLoading(false));
    fetch('/api/me')
      .then(res => res.json())
      .then(data => setUser(data.user || null))
      .finally(() => setLoading(false));
    setGreeting(greetings[Math.floor(Math.random() * greetings.length)]);
  }, []);

  const handleLogout = async () => {
    try {
      await fetch('/api/logout', { method: 'POST' });
      setUser(null); // –û—á–∏—Å—Ç–∏—Ç–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ –∫–ª—ñ—î–Ω—Ç—ñ
      router.push('/'); // –ú–æ–∂–Ω–∞ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç–∏ –∞–±–æ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É
    } catch (error) {
      console.error('Failed to logout', error);
    }
  };

  // –í–∏–∑–Ω–∞—á–∞—î–º–æ, —á–∏ about —Ä–µ–∞–ª—å–Ω–æ –ø–æ—Ä–æ–∂–Ω—ñ–π (–Ω–∞–≤—ñ—Ç—å —è–∫—â–æ <p></p> –∞–±–æ –ø—Ä–æ–±—ñ–ª–∏)
  const isAboutEmpty = useMemo(() => {
    if (!about) return true;
    // –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ —Ç–µ–≥–∏, –ø—Ä–æ–±—ñ—Å–∏, –ø–µ—Ä–µ–Ω–æ—Å–∏
    const text = about.replace(/<[^>]+>/g, '').replace(/\s+/g, '');
    return !text;
  }, [about]);
  if (loading || aboutLoading) {
    return (
      <main style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: 'calc(100vh - var(--navbar-height))' }}>
        <CircularProgress />
      </main>
    );
  }

  return (
    <div className={styles.mainPageRoot}>
      <div className={styles.mainPageTitle}>–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ Trench Crusade</div>
      <div className={styles.mainPageBlocks}>
        <div className={styles.mainPageAboutBlock}>          {!isAboutEmpty ? (
            <div 
              dangerouslySetInnerHTML={{ __html: about }} 
              className={styles.aboutContent}
            />
          ) : (
            <Typography 
              variant="h6" 
              align="center" 
              sx={{ 
                color: 'primary.main', 
                fontWeight: 600, 
                mt: { xs: 2, md: 4 }, 
                mb: { xs: 2, md: 4 }, 
                px: { xs: 1, md: 2 },
                fontSize: { xs: '1rem', sm: '1.1rem', md: '1.25rem' },
                lineHeight: 1.5,
                textShadow: '0 2px 12px #bbb8, 0 0 2px #fff8' 
              }}
            >
              –í—Å—Ç—É–ø–Ω–∞ —ñ—Å—Ç–æ—Ä—ñ—è —Ü—ñ—î—ó –∫–∞–º–ø–∞–Ω—ñ—ó —â–µ –ø–∏—à–µ—Ç—å—Å—è —É –±–∞–≥–Ω—é—Ü—ñ –æ–∫–æ–ø—ñ–≤...<br/>
              –°—Ç–æ—Ä—ñ–Ω–∫–∏ —Ö—Ä–æ–Ω—ñ–∫ —á–µ–∫–∞—é—Ç—å –Ω–∞ –ø–µ—Ä—à—ñ –≥–µ—Ä–æ—ó—á–Ω—ñ –≤—á–∏–Ω–∫–∏!
            </Typography>
          )}
        </div>
        <div className={styles.mainPageButtonBlock}>
          {user ? (
            <>
              <Typography 
                variant="h6" 
                align="center" 
                sx={{ 
                  mb: 2, 
                  fontWeight: 600,
                  fontSize: { xs: '1.1rem', sm: '1.25rem' }
                }}
              >
                {greeting} {user.name || '–¥—Ä—É–∂–µ'}!
              </Typography>              {user.is_admin && (
                <Button
                  variant="contained"
                  color="secondary"
                  fullWidth
                  onClick={() => location.href = '/admin'}
                  sx={{ mb: { xs: 0.5, sm: 0.8 }, py: { xs: 1, sm: 1.2 } }}
                >
                  –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –∞–¥–º—ñ–Ω-—á–∞—Å—Ç–∏–Ω–∏
                </Button>
              )}
              <Button
                variant="outlined"
                color="primary"
                fullWidth
                onClick={() => location.href = '/profile'}
                sx={{ mb: { xs: 0.5, sm: 0.8 }, py: { xs: 1, sm: 1.2 } }}
              >
                –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å
              </Button>
              {/* –ü–µ—Ä–µ–ª—ñ–∫ –≤–∞—Ä–±–∞–Ω–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ */}              {user && Array.isArray(user.warbands) && user.warbands.length > 0 && (
                <div style={{ marginBottom: 16, width: '100%' }}>
                  <Typography 
                    variant="subtitle1" 
                    sx={{ 
                      fontWeight: 600, 
                      mb: 1.5, 
                      fontSize: { xs: '1rem', sm: '1.1rem' },
                      textAlign: 'center',
                      borderBottom: '1px solid #e0e0e0',
                      paddingBottom: '8px'
                    }}
                  >
                    –í–∞—à—ñ –≤–∞—Ä–±–∞–Ω–¥–∏:
                  </Typography>
                  {user.warbands.filter((w: any) => w.status !== 'deleted').map((w: any, idx: number) => {
                    let statusIcon: React.ReactNode = null;
                    let statusColor = 'action';
                    let statusTitle = '';
                    if (w.status === 'active') {
                      statusIcon = <span style={{fontSize: '1.2em'}} role="img" aria-label="–ì–æ—Ç–æ–≤–∞">üü¢</span>;
                      statusColor = 'success.main';
                      statusTitle = '–ê–∫—Ç–∏–≤–Ω–∞';
                    } else if (w.status === 'checking') {
                      statusIcon = <span style={{fontSize: '1.2em'}} role="img" aria-label="–ù–∞ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ">üëÅÔ∏è</span>;
                      statusColor = 'warning.main';
                      statusTitle = '–ù–∞ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ';
                    } else if (w.status === 'needs_update') {
                      statusIcon = <span style={{fontSize: '1.2em'}} role="img" aria-label="–ü–æ—Ç—Ä–µ–±—É—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è">‚ö†Ô∏è</span>;
                      statusColor = 'warning.dark';
                      statusTitle = '–ü–æ—Ç—Ä–µ–±—É—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–æ—Å—Ç–µ—Ä—É';
                    } else {
                      statusIcon = <span style={{fontSize: '1.2em'}} role="img" aria-label="–í–∏–¥–∞–ª–µ–Ω–∞">üíÄ</span>;
                      statusColor = 'text.disabled';
                      statusTitle = '–í–∏–¥–∞–ª–µ–Ω–∞';
                    }
                    return (                      <div key={w.name + idx} style={{ 
                        display: 'flex', 
                        flexDirection: 'column', 
                        alignItems: 'flex-start',                        marginBottom: 8, 
                        border: '1px solid #e0e0e0', 
                        borderRadius: 8, 
                        padding: '8px', 
                        background: '#fafbfc',
                        boxShadow: '0 2px 6px rgba(0,0,0,0.05)'
                      }}>
                        <div style={{ 
                          display: 'flex', 
                          alignItems: 'center', 
                          width: '100%',
                          marginBottom: 8
                        }}>
                          <Tooltip title={statusTitle} arrow placement="top">
                            <span style={{ fontWeight: 600, cursor: 'help', fontSize: '1.05rem' }}>{w.name}</span>
                          </Tooltip>
                          <Tooltip title={statusTitle} arrow placement="top">
                            <span style={{fontSize: 18, color: '#666', display: 'flex', alignItems: 'center', marginLeft: 8}}>
                              {statusIcon}
                            </span>
                          </Tooltip>
                        </div>
                        
                        {w.status === 'needs_update' ? (
                          <Button
                            variant="contained"
                            color="warning"
                            size="small"
                            sx={{ 
                              fontWeight: 700, 
                              letterSpacing: 0.5, 
                              boxShadow: '0 1px 4px #4f010122', 
                              px: 1.5, 
                              py: 0.4, 
                              fontSize: 13, 
                              textTransform: 'uppercase', 
                              display: 'flex', 
                              alignItems: 'center', 
                              gap: 1,
                              width: '100%'
                            }}
                            component={Link}
                            href={`/warband-apply?warband_id=${w.id}&warband_name=${encodeURIComponent(w.name)}`}
                          >
                            <span style={{fontSize:18,marginRight:6}}>üõ†Ô∏è</span> –û–Ω–æ–≤–∏—Ç–∏ —Ä–æ—Å—Ç–µ—Ä
                          </Button>
                        ) : (
                          <Button
                            variant="contained"
                            color="secondary"
                            size="small"
                            sx={{ 
                              fontWeight: 700, 
                              letterSpacing: 0.5, 
                              boxShadow: '0 1px 4px #4f010122', 
                              px: 1.5, 
                              py: 0.4, 
                              fontSize: 13, 
                              textTransform: 'uppercase', 
                              display: 'flex', 
                              alignItems: 'center', 
                              gap: 1,
                              width: '100%'
                            }}
                            component={Link}
                            href={`/battle?warband_id=${w.id}`}
                            disabled={w.status === 'checking' || w.status === 'needs_update'}
                            title={w.status === 'checking' ? '–í–∞—Ä–±–∞–Ω–¥–∏ –Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ. –î–æ—á–µ–∫–∞–π—Ç–µ—Å—å —Å—Ö–≤–∞–ª–µ–Ω–Ω—è.' : w.status === 'needs_update' ? '–í–∞—Ä–±–∞–Ω–¥–∏ –ø–æ—Ç—Ä–µ–±—É—é—Ç—å –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–æ—Å—Ç–µ—Ä—É. –û–Ω–æ–≤—ñ—Ç—å —Ä–æ—Å—Ç–µ—Ä –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó.' : ''}
                          >
                            <img
                              src="/swords.png"
                              alt="–°—Ö—Ä–µ—â–µ–Ω—ñ –º–µ—á—ñ"
                              style={{
                                width: 18,
                                height: 18,
                                marginRight: 6,
                                verticalAlign: 'middle',
                                filter: w.status === 'checking' || w.status === 'needs_update' ? 'grayscale(1) brightness(1.2) opacity(.5) drop-shadow(0 1px 2px #0003)' : 'drop-shadow(0 1px 2px #0003)'
                              }}
                            /> –î–æ –±–æ—é!
                          </Button>
                        )}
                      </div>
                    );
                  })}
                </div>
              )}
              {/* –ö–Ω–æ–ø–∫–∞ —Ç–∞–±–ª–∏—Ü—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ */}              <Button
                variant="outlined"
                color="primary"
                fullWidth
                component={Link}
                href="/players"
                sx={{ mb: { xs: 0.5, sm: 0.8 }, py: { xs: 1, sm: 1.2 } }}
              >
                –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≥—Ä–∞–≤—Ü—ñ–≤ –∫–∞–º–ø–∞–Ω—ñ—ó
              </Button>
              <Button
                variant="outlined"
                color="primary"
                fullWidth
                component={Link}
                href="/table"
                sx={{ mb: { xs: 0.5, sm: 0.8 }, py: { xs: 1, sm: 1.2 } }}
              >
                –¢–∞–±–ª–∏—Ü—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
              </Button>
              {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–¥–∞—Ç–∏ —Ä–æ—Å—Ç–µ—Ä —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –Ω–µ –±—ñ–ª—å—à–µ 1 –Ω–µ –≤–∏–¥–∞–ª–µ–Ω–æ—ó –≤–∞—Ä–±–∞–Ω–¥–∏ */}              {user && (user.warbands?.filter((w: any) => w.status !== 'deleted').length ?? 0) < 2 && (
                <Button
                  variant="contained"
                  color="primary"
                  fullWidth
                  component={Link}
                  href="/warband-apply"
                  sx={{ mt: { xs: 0.5, sm: 0.8 }, mb: { xs: 0.5, sm: 0.8 }, py: { xs: 1, sm: 1.2 } }}
                >
                  –ü–æ–¥–∞—Ç–∏ —Ä–æ—Å—Ç–µ—Ä –Ω–∞ —É—á–∞—Å—Ç—å —É –∫–∞–º–ø–∞–Ω—ñ—ó
                </Button>
              )}
              <Button 
                variant="contained" 
                color="secondary" 
                fullWidth 
                onClick={handleLogout}
                sx={{ py: { xs: 1, sm: 1.2 } }}
              >
                –í–∏–π—Ç–∏
              </Button>
            </>
          ) : (            <>              <Button 
                variant="contained" 
                color="primary" 
                fullWidth 
                onClick={() => location.href = '/login'}
                sx={{ mb: { xs: 0.5, sm: 0.8 }, py: { xs: 1.2, sm: 1.5 }, fontSize: { xs: '1rem', sm: '1.1rem' } }}
              >
                –£–≤—ñ–π—Ç–∏
              </Button>
              <Button 
                variant="outlined" 
                color="secondary" 
                fullWidth 
                onClick={() => location.href = '/register'}
                sx={{ py: { xs: 1.2, sm: 1.5 }, fontSize: { xs: '1rem', sm: '1.1rem' } }}
              >
                –ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è
              </Button>
            </>
          )}
        </div>
      </div>
    </div>
  );
}
